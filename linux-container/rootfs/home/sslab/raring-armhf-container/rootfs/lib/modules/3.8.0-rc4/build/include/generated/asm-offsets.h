#ifndef __ASM_OFFSETS_H__
#define __ASM_OFFSETS_H__
/*
 * DO NOT MODIFY.
 *
 * This file was generated by Kbuild
 *
 */

#define TSK_ACTIVE_MM 220 /* offsetof(struct task_struct, active_mm)	@ */

#define TI_FLAGS 0 /* offsetof(struct thread_info, flags)	@ */
#define TI_PREEMPT 4 /* offsetof(struct thread_info, preempt_count)	@ */
#define TI_ADDR_LIMIT 8 /* offsetof(struct thread_info, addr_limit)	@ */
#define TI_TASK 12 /* offsetof(struct thread_info, task)	@ */
#define TI_EXEC_DOMAIN 16 /* offsetof(struct thread_info, exec_domain)	@ */
#define TI_CPU 20 /* offsetof(struct thread_info, cpu)	@ */
#define TI_CPU_DOMAIN 24 /* offsetof(struct thread_info, cpu_domain)	@ */
#define TI_CPU_SAVE 28 /* offsetof(struct thread_info, cpu_context)	@ */
#define TI_USED_CP 80 /* offsetof(struct thread_info, used_cp)	@ */
#define TI_TP_VALUE 96 /* offsetof(struct thread_info, tp_value)	@ */
#define TI_FPSTATE 104 /* offsetof(struct thread_info, fpstate)	@ */
#define TI_VFPSTATE 248 /* offsetof(struct thread_info, vfpstate)	@ */
#define VFP_CPU 272 /* offsetof(union vfp_state, hard.cpu)	@ */

#define S_R0 0 /* offsetof(struct pt_regs, ARM_r0)	@ */
#define S_R1 4 /* offsetof(struct pt_regs, ARM_r1)	@ */
#define S_R2 8 /* offsetof(struct pt_regs, ARM_r2)	@ */
#define S_R3 12 /* offsetof(struct pt_regs, ARM_r3)	@ */
#define S_R4 16 /* offsetof(struct pt_regs, ARM_r4)	@ */
#define S_R5 20 /* offsetof(struct pt_regs, ARM_r5)	@ */
#define S_R6 24 /* offsetof(struct pt_regs, ARM_r6)	@ */
#define S_R7 28 /* offsetof(struct pt_regs, ARM_r7)	@ */
#define S_R8 32 /* offsetof(struct pt_regs, ARM_r8)	@ */
#define S_R9 36 /* offsetof(struct pt_regs, ARM_r9)	@ */
#define S_R10 40 /* offsetof(struct pt_regs, ARM_r10)	@ */
#define S_FP 44 /* offsetof(struct pt_regs, ARM_fp)	@ */
#define S_IP 48 /* offsetof(struct pt_regs, ARM_ip)	@ */
#define S_SP 52 /* offsetof(struct pt_regs, ARM_sp)	@ */
#define S_LR 56 /* offsetof(struct pt_regs, ARM_lr)	@ */
#define S_PC 60 /* offsetof(struct pt_regs, ARM_pc)	@ */
#define S_PSR 64 /* offsetof(struct pt_regs, ARM_cpsr)	@ */
#define S_OLD_R0 68 /* offsetof(struct pt_regs, ARM_ORIG_r0)	@ */
#define S_FRAME_SIZE 72 /* sizeof(struct pt_regs)	@ */

#define MM_CONTEXT_ID 376 /* offsetof(struct mm_struct, context.id)	@ */

#define VMA_VM_MM 32 /* offsetof(struct vm_area_struct, vm_mm)	@ */
#define VMA_VM_FLAGS 48 /* offsetof(struct vm_area_struct, vm_flags)	@ */

#define VM_EXEC 4 /* VM_EXEC	@ */

#define PAGE_SZ 4096 /* PAGE_SIZE	@ */

#define SYS_ERROR0 10420224 /* 0x9f0000	@ */

#define SIZEOF_MACHINE_DESC 80 /* sizeof(struct machine_desc)	@ */
#define MACHINFO_TYPE 0 /* offsetof(struct machine_desc, nr)	@ */
#define MACHINFO_NAME 4 /* offsetof(struct machine_desc, name)	@ */

#define PROC_INFO_SZ 52 /* sizeof(struct proc_info_list)	@ */
#define PROCINFO_INITFUNC 16 /* offsetof(struct proc_info_list, __cpu_flush)	@ */
#define PROCINFO_MM_MMUFLAGS 8 /* offsetof(struct proc_info_list, __cpu_mm_mmu_flags)	@ */
#define PROCINFO_IO_MMUFLAGS 12 /* offsetof(struct proc_info_list, __cpu_io_mmu_flags)	@ */


#define DMA_BIDIRECTIONAL 0 /* DMA_BIDIRECTIONAL	@ */
#define DMA_TO_DEVICE 1 /* DMA_TO_DEVICE	@ */
#define DMA_FROM_DEVICE 2 /* DMA_FROM_DEVICE	@ */
#define VCPU_KVM 0 /* offsetof(struct kvm_vcpu, kvm)	@ */
#define VCPU_MIDR 460 /* offsetof(struct kvm_vcpu, arch.midr)	@ */
#define VCPU_CP15 352 /* offsetof(struct kvm_vcpu, arch.cp15)	@ */
#define VCPU_VFP_GUEST 480 /* offsetof(struct kvm_vcpu, arch.vfp_guest)	@ */
#define VCPU_VFP_HOST 760 /* offsetof(struct kvm_vcpu, arch.vfp_host)	@ */
#define VCPU_REGS 192 /* offsetof(struct kvm_vcpu, arch.regs)	@ */
#define VCPU_USR_REGS 192 /* offsetof(struct kvm_vcpu, arch.regs.usr_regs)	@ */
#define VCPU_SVC_REGS 264 /* offsetof(struct kvm_vcpu, arch.regs.svc_regs)	@ */
#define VCPU_ABT_REGS 276 /* offsetof(struct kvm_vcpu, arch.regs.abt_regs)	@ */
#define VCPU_UND_REGS 288 /* offsetof(struct kvm_vcpu, arch.regs.und_regs)	@ */
#define VCPU_IRQ_REGS 300 /* offsetof(struct kvm_vcpu, arch.regs.irq_regs)	@ */
#define VCPU_FIQ_REGS 312 /* offsetof(struct kvm_vcpu, arch.regs.fiq_regs)	@ */
#define VCPU_PC 252 /* offsetof(struct kvm_vcpu, arch.regs.usr_regs.ARM_pc)	@ */
#define VCPU_CPSR 256 /* offsetof(struct kvm_vcpu, arch.regs.usr_regs.ARM_cpsr)	@ */
#define VCPU_IRQ_LINES 1316 /* offsetof(struct kvm_vcpu, arch.irq_lines)	@ */
#define VCPU_HSR 464 /* offsetof(struct kvm_vcpu, arch.hsr)	@ */
#define VCPU_HxFAR 468 /* offsetof(struct kvm_vcpu, arch.hxfar)	@ */
#define VCPU_HPFAR 472 /* offsetof(struct kvm_vcpu, arch.hpfar)	@ */
#define VCPU_HYP_PC 1320 /* offsetof(struct kvm_vcpu, arch.hyp_pc)	@ */
#define VCPU_VGIC_CPU 764 /* offsetof(struct kvm_vcpu, arch.vgic_cpu)	@ */
#define VGIC_CPU_HCR 156 /* offsetof(struct vgic_cpu, vgic_hcr)	@ */
#define VGIC_CPU_VMCR 160 /* offsetof(struct vgic_cpu, vgic_vmcr)	@ */
#define VGIC_CPU_MISR 164 /* offsetof(struct vgic_cpu, vgic_misr)	@ */
#define VGIC_CPU_EISR 168 /* offsetof(struct vgic_cpu, vgic_eisr)	@ */
#define VGIC_CPU_ELRSR 176 /* offsetof(struct vgic_cpu, vgic_elrsr)	@ */
#define VGIC_CPU_APR 184 /* offsetof(struct vgic_cpu, vgic_apr)	@ */
#define VGIC_CPU_LR 188 /* offsetof(struct vgic_cpu, vgic_lr)	@ */
#define VGIC_CPU_NR_LR 152 /* offsetof(struct vgic_cpu, nr_lr)	@ */
#define VCPU_TIMER_CNTV_CTL 1208 /* offsetof(struct kvm_vcpu, arch.timer_cpu.cntv_ctl)	@ */
#define VCPU_TIMER_CNTV_CVAL 1216 /* offsetof(struct kvm_vcpu, arch.timer_cpu.cntv_cval)	@ */
#define KVM_TIMER_CNTVOFF 272 /* offsetof(struct kvm, arch.timer.cntvoff)	@ */
#define KVM_TIMER_ENABLED 264 /* offsetof(struct kvm, arch.timer.enabled)	@ */
#define KVM_VGIC_VCTRL 316 /* offsetof(struct kvm, arch.vgic.vctrl_base)	@ */
#define KVM_VTTBR 256 /* offsetof(struct kvm, arch.vttbr)	@ */

#endif
